{
  "address": "0xAa241Ccd398feC742f463c534a610529dCC5888E",
  "abi": [
    {
      "inputs": [{ "internalType": "address", "name": "_admin", "type": "address" }],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [{ "indexed": true, "internalType": "address", "name": "_wallet", "type": "address" }],
      "name": "ApproveWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [{ "indexed": true, "internalType": "address", "name": "_wallet", "type": "address" }],
      "name": "RevokeWallet",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "stateMutability": "view",
      "type": "function"
    },
    { "inputs": [], "name": "applyAdmin", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "applySetChecker", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    {
      "inputs": [{ "internalType": "address", "name": "_wallet", "type": "address" }],
      "name": "approveWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [{ "internalType": "address", "name": "_wallet", "type": "address" }],
      "name": "check",
      "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checker",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [{ "internalType": "address", "name": "_admin", "type": "address" }],
      "name": "commitAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [{ "internalType": "address", "name": "_checker", "type": "address" }],
      "name": "commitSetChecker",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "future_admin",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "future_checker",
      "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [{ "internalType": "address", "name": "_wallet", "type": "address" }],
      "name": "revokeWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
      "name": "wallets",
      "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd50499beda00dea298c0c0247926116299c4fba1694542c85872f37ce7d617b5",
  "receipt": {
    "to": null,
    "from": "0x2Acd062Cf718c87c9A58382f01C5b51a0f287C8D",
    "contractAddress": "0xAa241Ccd398feC742f463c534a610529dCC5888E",
    "transactionIndex": 127,
    "gasUsed": "588167",
    "logsBloom": "0x
    "blockHash": "0x9e22ce23daee0cc9371d0c5edbc1c29311c8157300819f7e99a811f91f546024",
    "transactionHash": "0xd50499beda00dea298c0c0247926116299c4fba1694542c85872f37ce7d617b5",
    "logs": [],
    "blockNumber": 13983397,
    "cumulativeGasUsed": "11895857",
    "status": 1,
    "byzantium": true
  },
  "args": ["0xdC4e6DFe07EFCa50a197DF15D9200883eF4Eb1c8"],
  "solcInputHash": "5fbb2a27ce745a463e53eb0ef43e4c52",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"ApproveWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"RevokeWallet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"applyAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"applySetChecker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"approveWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"commitAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_checker\",\"type\":\"address\"}],\"name\":\"commitSetChecker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"future_admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"future_checker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"revokeWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wallets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Curve Finance and adapted by Angle Core Team (https://etherscan.io/address/0xca719728ef172d0961768581fdf35cb116e0b7a4#code)\",\"kind\":\"dev\",\"methods\":{\"approveWallet(address)\":{\"params\":{\"_wallet\":\"Wallet to approve\"}},\"check(address)\":{\"details\":\"This function can also rely on another SmartWalletChecker (a `checker` to see whether the wallet is whitelisted or not)\",\"params\":{\"_wallet\":\"Wallet address to check\"}},\"commitAdmin(address)\":{\"params\":{\"_admin\":\"New admin of the contract\"}},\"commitSetChecker(address)\":{\"details\":\"This address can be the zero address in which case there will be no checker\",\"params\":{\"_checker\":\"New checker address\"}},\"constructor\":{\"params\":{\"_admin\":\"Admin address of the contract\"}},\"revokeWallet(address)\":{\"params\":{\"_wallet\":\"Wallet to revoke\"}}},\"title\":\"SmartWalletWhitelist\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"admin()\":{\"notice\":\"Admin address of the contract\"},\"applyAdmin()\":{\"notice\":\"Changes the admin to the admin that has been committed\"},\"applySetChecker()\":{\"notice\":\"Applies the checker previously committed\"},\"approveWallet(address)\":{\"notice\":\"Approves a wallet\"},\"check(address)\":{\"notice\":\"Checks whether a wallet is whitelisted\"},\"checker()\":{\"notice\":\"Contract which works as this contract and that can whitelist addresses\"},\"commitAdmin(address)\":{\"notice\":\"Commits to change the admin\"},\"commitSetChecker(address)\":{\"notice\":\"Commits to change the checker address\"},\"constructor\":{\"notice\":\"Constructor of the contract\"},\"future_admin()\":{\"notice\":\"Future admin address of the contract\"},\"future_checker()\":{\"notice\":\"Future address to become checker\"},\"revokeWallet(address)\":{\"notice\":\"Revokes a wallet\"},\"wallets(address)\":{\"notice\":\"Mapping between addresses and whether they are whitelisted or not\"}},\"notice\":\"Provides functions to check whether a wallet has been verified or not to own veANGLE\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/external/SmartWalletChecker.sol\":\"SmartWalletWhitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"contracts/external/SmartWalletChecker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.7;\\n\\n/// @notice Interface of the `SmartWalletChecker` contracts of the protocol\\ninterface SmartWalletChecker {\\n    function check(address) external view returns (bool);\\n}\\n\\n/// @title SmartWalletWhitelist\\n/// @author Curve Finance and adapted by Angle Core Team (https://etherscan.io/address/0xca719728ef172d0961768581fdf35cb116e0b7a4#code)\\n/// @notice Provides functions to check whether a wallet has been verified or not to own veANGLE\\ncontract SmartWalletWhitelist {\\n    /// @notice Mapping between addresses and whether they are whitelisted or not\\n    mapping(address => bool) public wallets;\\n    /// @notice Admin address of the contract\\n    address public admin;\\n    /// @notice Future admin address of the contract\\n    //solhint-disable-next-line\\n    address public future_admin;\\n    /// @notice Contract which works as this contract and that can whitelist addresses\\n    address public checker;\\n    /// @notice Future address to become checker\\n    //solhint-disable-next-line\\n    address public future_checker;\\n\\n    event ApproveWallet(address indexed _wallet);\\n    event RevokeWallet(address indexed _wallet);\\n\\n    /// @notice Constructor of the contract\\n    /// @param _admin Admin address of the contract\\n    constructor(address _admin) {\\n        require(_admin != address(0), \\\"0\\\");\\n        admin = _admin;\\n    }\\n\\n    /// @notice Commits to change the admin\\n    /// @param _admin New admin of the contract\\n    function commitAdmin(address _admin) external {\\n        require(msg.sender == admin, \\\"!admin\\\");\\n        future_admin = _admin;\\n    }\\n\\n    /// @notice Changes the admin to the admin that has been committed\\n    function applyAdmin() external {\\n        require(msg.sender == admin, \\\"!admin\\\");\\n        require(future_admin != address(0), \\\"admin not set\\\");\\n        admin = future_admin;\\n    }\\n\\n    /// @notice Commits to change the checker address\\n    /// @param _checker New checker address\\n    /// @dev This address can be the zero address in which case there will be no checker\\n    function commitSetChecker(address _checker) external {\\n        require(msg.sender == admin, \\\"!admin\\\");\\n        future_checker = _checker;\\n    }\\n\\n    /// @notice Applies the checker previously committed\\n    function applySetChecker() external {\\n        require(msg.sender == admin, \\\"!admin\\\");\\n        checker = future_checker;\\n    }\\n\\n    /// @notice Approves a wallet\\n    /// @param _wallet Wallet to approve\\n    function approveWallet(address _wallet) public {\\n        require(msg.sender == admin, \\\"!admin\\\");\\n        wallets[_wallet] = true;\\n\\n        emit ApproveWallet(_wallet);\\n    }\\n\\n    /// @notice Revokes a wallet\\n    /// @param _wallet Wallet to revoke\\n    function revokeWallet(address _wallet) external {\\n        require(msg.sender == admin, \\\"!admin\\\");\\n        wallets[_wallet] = false;\\n\\n        emit RevokeWallet(_wallet);\\n    }\\n\\n    /// @notice Checks whether a wallet is whitelisted\\n    /// @param _wallet Wallet address to check\\n    /// @dev This function can also rely on another SmartWalletChecker (a `checker` to see whether the wallet is whitelisted or not)\\n    function check(address _wallet) external view returns (bool) {\\n        bool _check = wallets[_wallet];\\n        if (_check) {\\n            return _check;\\n        } else {\\n            if (checker != address(0)) {\\n                return SmartWalletChecker(checker).check(_wallet);\\n            }\\n        }\\n        return false;\\n    }\\n}\\n\",\"keccak256\":\"0x8ac6ad7a82a3497ad8b7c5babbf6fe600c34b6376cd40318584456a1cf25954f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a21380380610a2183398101604081905261002f91610092565b6001600160a01b03811661006d5760405162461bcd60e51b81526020600482015260016024820152600360fc1b604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b03929092169190911790556100c2565b6000602082840312156100a457600080fd5b81516001600160a01b03811681146100bb57600080fd5b9392505050565b610950806100d16000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638fcdecc811610081578063c23697a81161005b578063c23697a8146101d4578063cf5303cf146101e7578063f851a4401461020757600080fd5b80638fcdecc81461018e578063943f35a4146101ae578063b0f3b734146101c157600080fd5b80634e67428d116100b25780634e67428d14610140578063808a9d401461014857806389b08f111461015b57600080fd5b80630fcb0ae5146100d957806317f7182a146100ee57806326b42b1a14610138575b600080fd5b6100ec6100e73660046108c2565b610227565b005b60025461010e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100ec610324565b6100ec6103ee565b6100ec6101563660046108c2565b610537565b61017e6101693660046108c2565b60006020819052908152604090205460ff1681565b604051901515815260200161012f565b60045461010e9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ec6101bc3660046108c2565b61062c565b6100ec6101cf3660046108c2565b6106f4565b61017e6101e23660046108c2565b6107bc565b60035461010e9073ffffffffffffffffffffffffffffffffffffffff1681565b60015461010e9073ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1633146102ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517fc1e7aae3f3125e58cfc69ab2a872a655dbb9427614aa85b29bb5abeaca4d6a929190a250565b60015473ffffffffffffffffffffffffffffffffffffffff1633146103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064016102a4565b600454600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff16331461046f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064016102a4565b60025473ffffffffffffffffffffffffffffffffffffffff166104ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f61646d696e206e6f74207365740000000000000000000000000000000000000060448201526064016102a4565b600254600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff1633146105b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064016102a4565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055517f1b676c3cc753786cb95aff57280fd7406f1da74e2a8b9755fdd395aded3e16dd9190a250565b60015473ffffffffffffffffffffffffffffffffffffffff1633146106ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064016102a4565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff163314610775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064016102a4565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604081205460ff1680156107f15792915050565b60035473ffffffffffffffffffffffffffffffffffffffff16156108b9576003546040517fc23697a800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301529091169063c23697a89060240160206040518083038186803b15801561087a57600080fd5b505afa15801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b291906108f8565b9392505050565b50600092915050565b6000602082840312156108d457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146108b257600080fd5b60006020828403121561090a57600080fd5b815180151581146108b257600080fdfea2646970667358221220d4638eaad596fc470622a43f97524bcd915c6465b6e28d89b2ae6e760a15a2dc64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c80638fcdecc811610081578063c23697a81161005b578063c23697a8146101d4578063cf5303cf146101e7578063f851a4401461020757600080fd5b80638fcdecc81461018e578063943f35a4146101ae578063b0f3b734146101c157600080fd5b80634e67428d116100b25780634e67428d14610140578063808a9d401461014857806389b08f111461015b57600080fd5b80630fcb0ae5146100d957806317f7182a146100ee57806326b42b1a14610138575b600080fd5b6100ec6100e73660046108c2565b610227565b005b60025461010e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100ec610324565b6100ec6103ee565b6100ec6101563660046108c2565b610537565b61017e6101693660046108c2565b60006020819052908152604090205460ff1681565b604051901515815260200161012f565b60045461010e9073ffffffffffffffffffffffffffffffffffffffff1681565b6100ec6101bc3660046108c2565b61062c565b6100ec6101cf3660046108c2565b6106f4565b61017e6101e23660046108c2565b6107bc565b60035461010e9073ffffffffffffffffffffffffffffffffffffffff1681565b60015461010e9073ffffffffffffffffffffffffffffffffffffffff1681565b60015473ffffffffffffffffffffffffffffffffffffffff1633146102ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517fc1e7aae3f3125e58cfc69ab2a872a655dbb9427614aa85b29bb5abeaca4d6a929190a250565b60015473ffffffffffffffffffffffffffffffffffffffff1633146103a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064016102a4565b600454600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff16331461046f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064016102a4565b60025473ffffffffffffffffffffffffffffffffffffffff166104ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f61646d696e206e6f74207365740000000000000000000000000000000000000060448201526064016102a4565b600254600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff1633146105b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064016102a4565b73ffffffffffffffffffffffffffffffffffffffff811660008181526020819052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055517f1b676c3cc753786cb95aff57280fd7406f1da74e2a8b9755fdd395aded3e16dd9190a250565b60015473ffffffffffffffffffffffffffffffffffffffff1633146106ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064016102a4565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff163314610775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f2161646d696e000000000000000000000000000000000000000000000000000060448201526064016102a4565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b73ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604081205460ff1680156107f15792915050565b60035473ffffffffffffffffffffffffffffffffffffffff16156108b9576003546040517fc23697a800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301529091169063c23697a89060240160206040518083038186803b15801561087a57600080fd5b505afa15801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b291906108f8565b9392505050565b50600092915050565b6000602082840312156108d457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146108b257600080fd5b60006020828403121561090a57600080fd5b815180151581146108b257600080fdfea2646970667358221220d4638eaad596fc470622a43f97524bcd915c6465b6e28d89b2ae6e760a15a2dc64736f6c63430008070033",
  "devdoc": {
    "author": "Curve Finance and adapted by Angle Core Team (https://etherscan.io/address/0xca719728ef172d0961768581fdf35cb116e0b7a4#code)",
    "kind": "dev",
    "methods": {
      "approveWallet(address)": { "params": { "_wallet": "Wallet to approve" } },
      "check(address)": {
        "details": "This function can also rely on another SmartWalletChecker (a `checker` to see whether the wallet is whitelisted or not)",
        "params": { "_wallet": "Wallet address to check" }
      },
      "commitAdmin(address)": { "params": { "_admin": "New admin of the contract" } },
      "commitSetChecker(address)": {
        "details": "This address can be the zero address in which case there will be no checker",
        "params": { "_checker": "New checker address" }
      },
      "constructor": { "params": { "_admin": "Admin address of the contract" } },
      "revokeWallet(address)": { "params": { "_wallet": "Wallet to revoke" } }
    },
    "title": "SmartWalletWhitelist",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "admin()": { "notice": "Admin address of the contract" },
      "applyAdmin()": { "notice": "Changes the admin to the admin that has been committed" },
      "applySetChecker()": { "notice": "Applies the checker previously committed" },
      "approveWallet(address)": { "notice": "Approves a wallet" },
      "check(address)": { "notice": "Checks whether a wallet is whitelisted" },
      "checker()": { "notice": "Contract which works as this contract and that can whitelist addresses" },
      "commitAdmin(address)": { "notice": "Commits to change the admin" },
      "commitSetChecker(address)": { "notice": "Commits to change the checker address" },
      "constructor": { "notice": "Constructor of the contract" },
      "future_admin()": { "notice": "Future admin address of the contract" },
      "future_checker()": { "notice": "Future address to become checker" },
      "revokeWallet(address)": { "notice": "Revokes a wallet" },
      "wallets(address)": { "notice": "Mapping between addresses and whether they are whitelisted or not" }
    },
    "notice": "Provides functions to check whether a wallet has been verified or not to own veANGLE",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 16,
        "contract": "contracts/external/SmartWalletChecker.sol:SmartWalletWhitelist",
        "label": "wallets",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 19,
        "contract": "contracts/external/SmartWalletChecker.sol:SmartWalletWhitelist",
        "label": "admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 22,
        "contract": "contracts/external/SmartWalletChecker.sol:SmartWalletWhitelist",
        "label": "future_admin",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 25,
        "contract": "contracts/external/SmartWalletChecker.sol:SmartWalletWhitelist",
        "label": "checker",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 28,
        "contract": "contracts/external/SmartWalletChecker.sol:SmartWalletWhitelist",
        "label": "future_checker",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
      "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}
